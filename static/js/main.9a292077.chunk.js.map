{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filtredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,yBAAmEC,IAAI,YAC/E,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJXC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SAEMD,EAAMS,SAASC,KAAI,SAAAP,GACjB,OACE,cAAC,EAAD,CAEAA,QAASA,GADJA,EAAQC,UCRdO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACE,uBAAOC,KAAK,SACZb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCgCCG,G,wDAlCb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAaRa,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJE,E,gEAQE,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAQjC,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACXU,EAAkBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYc,wBACnG,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAce,KAAKf,eACrB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BVK,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a292077.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n  return(\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${props.monster.id}set=set2&size=180x180`} alt=\"A robot\"/>\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = (props) =>{\r\n  return(\r\n    <div className=\"card-list\">\r\n        {\r\n          props.monsters.map(monster => {\r\n            return (\r\n              <Card\r\n              key={monster.id}\r\n              monster={monster} />\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n  return (\r\n    <input type=\"search\"\r\n    className=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n  );\r\n}","import React from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filtredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monster\"\n          handleChange={this.handleChange} />\n        <CardList monsters={filtredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}